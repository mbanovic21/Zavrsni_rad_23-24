<Application x:Class="PreschoolManagmentSoftware.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PreschoolManagmentSoftware"
             StartupUri="Windows/LoginWindow.xaml">
             <!-- StartupUri="MainWindow.xaml"> -->

    <Application.Resources>

        <Style x:Key="titleText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="36" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
        </Style>

        <Style x:Key="normalText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="LineHeight" Value="28" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#ffffff" />
        </Style>

        <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
        <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"/>
                            <Rectangle x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="3" RadiusY="3"/>
                                <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="3" RadiusY="3">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <!--da se puni po 1% polak-->
                    <BeginStoryboard>
                        <Storyboard DecelerationRatio="1">
                            <DoubleAnimation Storyboard.TargetProperty="Value" From="0" />
                        </Storyboard>
                    </BeginStoryboard>   
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="progresbarr-description" TargetType="TextBlock">
            <Setter Property="Text" Value="{Binding Value, ElementName=pbImageUpload, StringFormat={}{0:##.0}% done}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Value, ElementName=pbImageUpload}" Value="100">
                    <Setter Property="Text" Value="Upload Completed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="progresbarr-description-right" TargetType="TextBlock">
            <Setter Property="Text" Value="{Binding UploadSpeed, ElementName=this, StringFormat={}{0}Kb/sec}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding FallbackValue, ElementName=pbImageUpload}" Value="100">
                    <Setter Property="Text" Value="" />
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="loginButton" TargetType="Button">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="0 10 0 0" />
            <Setter Property="Background" Value="#3AB19B" />
            <Setter Property="Foreground" Value="#FDFEFE" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="#49B7A3" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#339685" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#2D7A6C" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="generatePasswordButton" TargetType="Button">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="#3AB19B" />
            <Setter Property="Foreground" Value="#FDFEFE" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" BorderBrush="#49B7A3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#339685" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#2D7A6C" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="generatePasswordButtonTransparent" TargetType="Button">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="#0b69a1" />
            <Setter Property="Foreground" Value="#FDFEFE" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5" BorderThickness="1" BorderBrush="White">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e8e8e8" />
                    <Setter Property="Foreground" Value="DimGray" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#d9d9d9" />
                    <Setter Property="Foreground" Value="DimGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="transparentButton" TargetType="Button">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="0 10 0 0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#FDFEFE" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="25" BorderThickness="1" BorderBrush="White" Padding="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e8e8e8" />
                    <Setter Property="Foreground" Value="DimGray" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#d9d9d9" />
                    <Setter Property="Foreground" Value="DimGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="whiteButton" TargetType="Button">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Width" Value="200" />
            <Setter Property="Margin" Value="0 10 0 0" />
            <Setter Property="Background" Value="#e8e8e8" />
            <Setter Property="Foreground" Value="DimGray" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#d9d9d9">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#e8e8e8" />
                    <Setter Property="Foreground" Value="#4a5356" />
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Background" Value="#d9d9d9" />
                    <Setter Property="Foreground" Value="#4a5356" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="placeholder" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="Foreground" Value="#acb0af" />
        </Style>

        <Style x:Key="textBox" TargetType="Control">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Margin" Value="10 0 0 0" />
            <Setter Property="Foreground" Value="#acb0af" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style x:Key="imgClose" TargetType="Image">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="Margin" Value="0 10 10 0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="btnMRC" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Height" Value="40" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="copyright" TargetType="TextBlock">
            <Setter Property="FontSize" Value="8" />
            <Setter Property="Grid.Column" Value="0" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="0 0 0 10" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>

        <Style x:Key="version" TargetType="TextBlock">
            <Setter Property="FontSize" Value="8" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#acb0af" />
            <Setter Property="Margin" Value="0,0,10,10" />
            <Setter Property="Panel.ZIndex" Value="1" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>

        <Style x:Key="link" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Grid.Column" Value="1" />
            <Setter Property="Foreground" Value="#0b69a1" />
            <Setter Property="Margin" Value="0,5,0,5" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DayTextBlockStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0,0,0,15" />
        </Style>
        
        <Style x:Key="TimeTextBlockStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0,0,15,0"/>
        </Style>

        <Style x:Key="ButtonWeeklyScheduleDayStyle" TargetType="Button">
            <Setter Property="Background" Value="#f0f0f0"/>
            <Setter Property="BorderThickness" Value="0.75"/>
            <Setter Property="BorderBrush" Value="#0a5a89"/>
            <Setter Property="Margin" Value="-0.5"/>
        </Style>

        <Style x:Key="info-required" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#d02c2c" />
            <Setter Property="FontStyle" Value="Italic" />
        </Style>

        <Style x:Key="combobox" TargetType="ComboBox">
            <Setter Property="Foreground" Value="#f5f5f5" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="#0b69a1" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton" 
                                          BorderBrush="{TemplateBinding BorderBrush}" 
                                          BorderThickness="{TemplateBinding BorderThickness}" 
                                          Background="{TemplateBinding Background}" 
                                          Grid.Column="1" 
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ClickMode="Press">
                                <ContentPresenter />
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite" 
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Left" 
                                              Margin="3,3,23,3" 
                                              IsHitTestVisible="False"/>
                            <Popup x:Name="Popup" 
                                   Placement="Bottom" 
                                   IsOpen="{TemplateBinding IsDropDownOpen}" 
                                   AllowsTransparency="True" 
                                   Focusable="False" 
                                   PopupAnimation="Slide">
                                <Grid x:Name="DropDown" 
                                      SnapsToDevicePixels="True" 
                                      MinWidth="{TemplateBinding ActualWidth}" 
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" 
                                            Background="{TemplateBinding Background}" 
                                            BorderThickness="1" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            CornerRadius="5">
                                        <!-- Dodajte CornerRadius -->
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Style.Triggers>
                <Trigger Property="IsDropDownOpen" Value="True">
                    <Setter Property="Opacity" Value="0.8" />
                    <Setter Property="Foreground" Value="#f5f5f5" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="0.8" />
                    <Setter Property="Foreground" Value="#f5f5f5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </Application.Resources>
</Application>
